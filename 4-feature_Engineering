{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"colab":{"provenance":[]},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":3136,"databundleVersionId":26502,"sourceType":"competition"}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":5,"nbformat":4,"cells":[{"id":"9be64e92","cell_type":"markdown","source":"# Titanic Veri Seti ile Özellik Mühendisliği Ödevi\n\n\n- **Veri seti**: Titanic veri seti.\n- **Amaç**:\n  - `Sex` sütununu veri setinden düşürmek.\n  - `Name` sütunundan unvanları (`Title`, örneğin Mr, Mrs, Miss) çıkararak cinsiyet tahmini yapmak.\n  - Eksik verileri doldurmak ve yeni özellikler oluşturmak.\n  - Bu aşamaya kadar kullanılan kodların fonksiyonlaştırılması.\n  - Tüm işlemleri fonksiyonlar halinde düzenlemek.\n- **Kullanılan kütüphaneler**: `pandas`, `numpy`.\n\n\n## Görevler\nAşağıdaki adımları takip ederek özellik mühendisliği yapın. Her bir görev için ayrı bir fonksiyon yazmanız gerekiyor. Fonksiyonlar, modüler ve tekrar kullanılabilir olmalıdır.\n\n### 1. Veri Setini Yükleme\n- **Görev**: Titanic veri setini bir pandas DataFrame’e yükleyin.\n- **Fonksiyon**: `load_data(file_path)`\n  - **Parametre**: `file_path` (dosya yolu, örneğin \"train.csv\")\n  - **Çıktı**: Pandas DataFrame\n\n### 2. Eksik Verileri Doldurma\n- **Görev**: `Age` ve `Embarked` sütunlarındaki eksik verileri doldurun.\n  - `Age`: Ortalama yaş ile doldurun.\n  - `Embarked`: En sık kullanılan liman ile doldurun.\n- **Fonksiyon**: `fill_missing_values(df)`\n  - **Parametre**: DataFrame\n  - **Çıktı**: Eksik verileri doldurulmuş DataFrame\n  - **Not**: Orijinal DataFrame’i değiştirmemek için kopyasını döndürün.\n\n### 3. Sex Sütununu Düşürme\n- **Görev**: `Sex` sütununu veri setinden kaldırın.\n- **Fonksiyon**: `drop_sex_column(df)`\n  - **Parametre**: DataFrame\n  - **Çıktı**: `Sex` sütunu kaldırılmış DataFrame\n  - **Not**: Orijinal DataFrame’i değiştirmemek için kopyasını döndürün.\n\n### 4. Unvan Çıkarımı (Title Extraction)\n- **Görev**: `Name` sütunundan unvanları (`Mr`, `Mrs`, `Miss`, `Master` vb.) çıkarın ve yeni bir `Title` sütunu oluşturun.\n- **Fonksiyon**: `extract_title(df)`\n  - **Parametre**: DataFrame\n  - **Çıktı**: `Title` sütunu eklenmiş DataFrame\n  - **Not**: Unvanları düzenli ifadeler (regex) kullanarak çıkarın. Örneğin, \"Mr.\" veya \"Mrs.\" gibi ifadeleri arayın.\n\n### 5. Cinsiyet Tahmini\n- **Görev**: `Title` sütununa dayalı olarak cinsiyet tahmini yapın ve yeni bir `EstimatedSex` sütunu oluşturun.\n  - Örneğin: `Mr`, `Master` → `male`; `Mrs`, `Miss` → `female`; diğer unvanlar için en yaygın cinsiyeti kullanın.\n- **Fonksiyon**: `estimate_sex_from_title(df)`\n  - **Parametre**: DataFrame\n  - **Çıktı**: `EstimatedSex` sütunu eklenmiş DataFrame\n  - **Not**: Orijinal DataFrame’i değiştirmemek için kopyasını döndürün.\n\n### 6. Yeni Özellik Oluşturma\n- **Görev**: Aşağıdaki yeni özellikleri oluşturun:\n  - `FamilySize`: `SibSp` + `Parch` + 1 (kendi dahil)\n  - `IsAlone`: `FamilySize` 1 ise 1, değilse 0\n  - `AgeGroup`: Yaşı kategorilere ayırın (örneğin, 0-12: Çocuk, 13-19: Genç, 20-59: Yetişkin, 60+: Yaşlı)\n- **Fonksiyon**: `create_new_features(df)`\n  - **Parametre**: DataFrame\n  - **Çıktı**: Yeni özellikler eklenmiş DataFrame\n  - **Not**: Orijinal DataFrame’i değiştirmemek için kopyasını döndürün.\n\n### 7. Tüm İşlemleri Birleştirme\n- **Görev**: Yukarıdaki tüm işlemleri sırayla uygulayan bir ana fonksiyon yazın.\n- **Fonksiyon**: `process_titanic_data(file_path)`\n  - **Parametre**: `file_path`\n  - **Çıktı**: İşlenmiş DataFrame\n  - **Not**: Tüm fonksiyonları sırayla çağırarak veri setini tamamen işleyin.","metadata":{"id":"9be64e92"}},{"id":"17166f77","cell_type":"code","source":"from pathlib import Path #Bu kütüphane dosya kontrolü için oluşturulmuş.\nimport pandas as pd\ndef load_data(file_path:str):\n    path = Path(file_path)\n    \"\"\"\n    if(file_path.exists() == True):\n        df = pd.read_csv(file_path)\n        return df\n    else:\n        print(\"Dosya yolu bozuk yeniden dene!\")\n        return None  \n    \"\"\"\n\n    if path.exists():\n        df = pd.read_csv(path)\n        return df\n    else:\n        print(\"Dosya yolu bozuk\")\n        return None\n    \"\"\"\n    Titanic veri setini yükler.\n    Parametre: file_path (str) - Veri setinin dosya yolu\n    Çıktı: Pandas DataFrame\n    \"\"\"\n    # TODO: Dosya varlığını kontrol et ve DataFrame döndür","metadata":{"id":"17166f77","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.856792Z","iopub.execute_input":"2025-07-18T16:15:05.857399Z","iopub.status.idle":"2025-07-18T16:15:05.862042Z","shell.execute_reply.started":"2025-07-18T16:15:05.857359Z","shell.execute_reply":"2025-07-18T16:15:05.861306Z"}},"outputs":[],"execution_count":11},{"id":"d56c8414-61d0-4589-a01b-36ab1206e423","cell_type":"code","source":"load_data('/kaggle/input/titanic/train.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.863124Z","iopub.execute_input":"2025-07-18T16:15:05.863378Z","iopub.status.idle":"2025-07-18T16:15:05.893276Z","shell.execute_reply.started":"2025-07-18T16:15:05.863358Z","shell.execute_reply":"2025-07-18T16:15:05.892546Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n  has_large_values = (abs_vals > 1e6).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","output_type":"stream"},{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"     PassengerId  Survived  Pclass  \\\n0              1         0       3   \n1              2         1       1   \n2              3         1       3   \n3              4         1       1   \n4              5         0       3   \n..           ...       ...     ...   \n886          887         0       2   \n887          888         1       1   \n888          889         0       3   \n889          890         1       1   \n890          891         0       3   \n\n                                                  Name     Sex   Age  SibSp  \\\n0                              Braund, Mr. Owen Harris    male  22.0      1   \n1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n2                               Heikkinen, Miss. Laina  female  26.0      0   \n3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n4                             Allen, Mr. William Henry    male  35.0      0   \n..                                                 ...     ...   ...    ...   \n886                              Montvila, Rev. Juozas    male  27.0      0   \n887                       Graham, Miss. Margaret Edith  female  19.0      0   \n888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n889                              Behr, Mr. Karl Howell    male  26.0      0   \n890                                Dooley, Mr. Patrick    male  32.0      0   \n\n     Parch            Ticket     Fare Cabin Embarked  \n0        0         A/5 21171   7.2500   NaN        S  \n1        0          PC 17599  71.2833   C85        C  \n2        0  STON/O2. 3101282   7.9250   NaN        S  \n3        0            113803  53.1000  C123        S  \n4        0            373450   8.0500   NaN        S  \n..     ...               ...      ...   ...      ...  \n886      0            211536  13.0000   NaN        S  \n887      0            112053  30.0000   B42        S  \n888      2        W./C. 6607  23.4500   NaN        S  \n889      0            111369  30.0000  C148        C  \n890      0            370376   7.7500   NaN        Q  \n\n[891 rows x 12 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>887</td>\n      <td>0</td>\n      <td>2</td>\n      <td>Montvila, Rev. Juozas</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536</td>\n      <td>13.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>888</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Graham, Miss. Margaret Edith</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053</td>\n      <td>30.0000</td>\n      <td>B42</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>889</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n      <td>female</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>2</td>\n      <td>W./C. 6607</td>\n      <td>23.4500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>890</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Behr, Mr. Karl Howell</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369</td>\n      <td>30.0000</td>\n      <td>C148</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>891</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Dooley, Mr. Patrick</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376</td>\n      <td>7.7500</td>\n      <td>NaN</td>\n      <td>Q</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 12 columns</p>\n</div>"},"metadata":{}}],"execution_count":12},{"id":"a56c1307","cell_type":"code","source":"# 2. Eksik Verileri Doldurma\ndef fill_missing_values(df):\n    \"\"\"\n    Age ve Embarked sütunlarındaki eksik verileri doldurur.\n    Parametre: df (DataFrame)\n    Çıktı: Eksik verileri doldurulmuş DataFrame\n    \"\"\"\n    df_copy = df.copy()\n    # TODO: Age için ortalama, Embarked için en sık değer ile doldur\n\n    df_copy[\"Age\"].fillna(df['Age'].mean(),inplace= True)\n    df_copy[\"Embarked\"].fillna(df['Embarked'].mode()[0],inplace= True)   \n    \n    return df_copy\n\n","metadata":{"id":"a56c1307","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.893905Z","iopub.execute_input":"2025-07-18T16:15:05.894078Z","iopub.status.idle":"2025-07-18T16:15:05.898668Z","shell.execute_reply.started":"2025-07-18T16:15:05.894063Z","shell.execute_reply":"2025-07-18T16:15:05.897928Z"}},"outputs":[],"execution_count":13},{"id":"8017a4c3","cell_type":"code","source":"# 3. Sex Sütununu Düşürme\ndef drop_sex_column(df):\n    \"\"\"\n    Sex sütununu düşürür.\n    Parametre: df (DataFrame)\n    Çıktı: Sex sütunu kaldırılmış DataFrame\n    \"\"\"\n    df_copy = df.copy()\n    # TODO: Sex sütununu kaldır\n\n    df_copy.drop('Sex',axis=1,inplace=True)\n    \n    return df_copy\n\n","metadata":{"id":"8017a4c3","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.900321Z","iopub.execute_input":"2025-07-18T16:15:05.900526Z","iopub.status.idle":"2025-07-18T16:15:05.909012Z","shell.execute_reply.started":"2025-07-18T16:15:05.900509Z","shell.execute_reply":"2025-07-18T16:15:05.908419Z"}},"outputs":[],"execution_count":14},{"id":"dc163100","cell_type":"code","source":"# 4. Unvan Çıkarımı\ndef extract_title(df):\n    \"\"\"\n    Name sütunundan unvanları çıkarır ve Title sütunu ekler.\n    Parametre: df (DataFrame)\n    Çıktı: Title sütunu eklenmiş DataFrame\n    \"\"\"\n    df_copy = df.copy()\n    # TODO: Regex ile unvanları çıkar ve Title sütunu ekle\n    df_copy['Title'] = df[\"Name\"].str.extract(' ([A-Za-z]+)\\.', expand=False)\n    return df_copy\n\n","metadata":{"id":"dc163100","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.909801Z","iopub.execute_input":"2025-07-18T16:15:05.909997Z","iopub.status.idle":"2025-07-18T16:15:05.923699Z","shell.execute_reply.started":"2025-07-18T16:15:05.909981Z","shell.execute_reply":"2025-07-18T16:15:05.923088Z"}},"outputs":[],"execution_count":15},{"id":"f3181a0f","cell_type":"code","source":"# 5. Cinsiyet Tahmini\ndef estimate_sex_from_title(df):\n    \"\"\"\n    Title sütununa göre cinsiyet tahmini yapar ve EstimatedSex sütunu ekler.\n    Parametre: df (DataFrame)\n    Çıktı: EstimatedSex sütunu eklenmiş DataFrame\n    \"\"\"\n    df_copy = df.copy()\n    # TODO: Title'a göre cinsiyet tahmini yap ve EstimatedSex sütunu ekle\n    df_copy[\"EstimatedSex\"] = df[\"Title\"].replace([\"Mlle\", \"Ms\", \"Mme\", \"Mrs\"], \"Miss\")\n    df_copy[\"EstimatedSex\"] = df[\"Title\"].replace([\"Dr\", \"Rev\", \"Major\", \"Col\", \"Don\", \"Sir\", \"Capt\", \"Jonkheer\", \"Lady\", \"Countess\"], \"Rare\")\n    return df_copy\n\n","metadata":{"id":"f3181a0f","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.924486Z","iopub.execute_input":"2025-07-18T16:15:05.924695Z","iopub.status.idle":"2025-07-18T16:15:05.935065Z","shell.execute_reply.started":"2025-07-18T16:15:05.924679Z","shell.execute_reply":"2025-07-18T16:15:05.934535Z"}},"outputs":[],"execution_count":16},{"id":"c00b5f4f","cell_type":"code","source":"# 6. Yeni Özellik Oluşturma\ndef create_new_features(df):\n    \n    \"\"\"\n    FamilySize, IsAlone ve AgeGroup özelliklerini oluşturur.\n    Parametre: df (DataFrame)\n    Çıktı: Yeni özellikler eklenmiş DataFrame\n    \"\"\"\n    df_copy = df.copy()\n    df_copy['FamilySize'] = df_copy['SibSp']+ df_copy['Parch'] +1\n    df_copy['IsAlone'] = df_copy['FamilySize'].apply(lambda x: 1 if x == 1 else 0) \n    df_copy[\"AgeGroup\"] = pd.cut(df_copy[\"Age\"], bins=[0, 12, 20, 60, 100], labels=[\"Çocuk\", \"Genç\", \"Yetişkin\", \"Yaşlı\"])\n    # TODO: FamilySize, IsAlone ve AgeGroup özelliklerini ekle\n    return df_copy\n\n","metadata":{"id":"c00b5f4f","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:15:05.935667Z","iopub.execute_input":"2025-07-18T16:15:05.935887Z","iopub.status.idle":"2025-07-18T16:15:05.947379Z","shell.execute_reply.started":"2025-07-18T16:15:05.935860Z","shell.execute_reply":"2025-07-18T16:15:05.946827Z"}},"outputs":[],"execution_count":17},{"id":"9842f6b9","cell_type":"code","source":"# 7. Tüm İşlemleri Birleştirme\ndef process_titanic_data(file_path):\n    \"\"\"\n    Tüm özellik mühendisliği adımlarını sırayla uygular.\n    Parametre: file_path (str) - Veri setinin dosya yolu\n    Çıktı: İşlenmiş DataFrame\n    \n\"\"\"\n    \n    # TODO: Yukarıdaki fonksiyonları sırayla çağır\n    df =load_data(file_path)\n    df=fill_missing_values(df)\n    df=drop_sex_column(df)\n    df=extract_title(df)\n    df=estimate_sex_from_title(df)\n    df=create_new_features(df)\n\n    return df","metadata":{"id":"9842f6b9","trusted":true,"execution":{"iopub.status.busy":"2025-07-18T16:18:12.597761Z","iopub.execute_input":"2025-07-18T16:18:12.598496Z","iopub.status.idle":"2025-07-18T16:18:12.602398Z","shell.execute_reply.started":"2025-07-18T16:18:12.598473Z","shell.execute_reply":"2025-07-18T16:18:12.601701Z"}},"outputs":[],"execution_count":19},{"id":"c2e8d5ae","cell_type":"markdown","source":"- Pipeline süreçleri oluşturun ve ColumnsTransformer kullanın.\n\n- Kendi Fonksiyonlarınızı Pipeline ile kulanmaya çalışın.\n- Fonksiyonlarınızı yazarken, her zaman DataFrame’in bir kopyasını döndürerek orijinal veriyi korumaya özen gösterin.\n- `EstimatedSex` için unvanların cinsiyetle ilişkisini belirlerken, yaygın unvanlar (`Mr`, `Mrs`, `Miss`, `Master`) için sabit kurallar kullanabilirsiniz. Nadir unvanlar için varsayılan bir cinsiyet atayabilirsiniz (örneğin, `male`).\n\n\nBaşarılar!","metadata":{"id":"c2e8d5ae"}},{"id":"7d253708","cell_type":"markdown","source":"","metadata":{"id":"7d253708"}}]}